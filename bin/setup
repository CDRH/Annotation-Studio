#!/usr/bin/env sh
# NODE_VERSION=0.10.21
# NPM_VERSION=1.3.11

trap '(( $? )) && { echo "setup failed"; exit 1; }' EXIT

check() {
  if ! command -v node >/dev/null; then
    echo "Please ensure node is installed"
    exit 1
  fi

  if ! command -v npm >/dev/null; then
    echo "Please ensure npm is installed"
    exit 1
  fi

  if ! pgrep mongo >/dev/null; then
    echo "Please ensure mongodb is installed"
    exit 1
  fi
}

install_data_store() {
  if ! [ -e 'tmp/annotation-data-store' ]; then
    echo 'copying annotation-data-store into tmp/'
    cd tmp
    git clone https://github.com/hyperstudio/MIT-Annotation-Data-Store.git annotation-data-store
    cd annotation-data-store
    echo 'installing node packages'
    npm install

    echo 'creating annotation-data-store local .env'

    cat > .env <<EOF

NODE_ENV=development
PATH=bin:node_modules/.bin:/usr/local/bin:/usr/bin:/bin
PORT=3000
SECRET=the-secret-the-annotator-gets-from-the-authorizing-site
CONSUMER=name-of-the-app-on-which-the-annotator-runs
VERSION=1.0
DB=mongodb://localhost/annotationdb
LOCAL_KEY_PATH=local-data-store.key
LOCAL_CERT_PATH=local-data-store.cert

EOF

    cd ../..

  fi
}


bootstrap_main_application() {

  echo 'creating local application.yml'

  cat > config/application.yml <<EOF

development:
  RACK_ENV:                               development
  RAILS_ENV:                              development
  API_CONSUMER:                           name-of-the-app-on-which-the-annotator-runs
  API_SECRET:                             the-secret-the-annotator-gets-from-the-authorizing-site
  API_URL:                                http://localhost:3000/api
  AWS_ACCESS_KEY_ID:                      aws_access_key
  AWS_SECRET_ACCESS_KEY:                  aws_secret_access_key
  ANNOTATOR_FILTER:                       false
  ANNOTATOR_RICHTEXT:                     false
  ANNOTATOR_RICHTEXT_CONFIG:              "undo redo | styleselect | bold italic | link image media | code"
  CONFIRMATION_GRACE_PERIOD:              2
  DEFAULT_USERS_CAN_CHOOSE_GROUPS:        true
  DEFAULT_USERS_CAN_CONTROL_PERMISSIONS:  true
  DEFAULT_USERS_CAN_CREATE_TEXTS:         true
  DEFAULT_USERS_CAN_SEE_OTHERS_WORK:      true
  DEFAULT_USER_GROUP:                     student
  ENVIRONMENT_TAG:                        Development
  GMAIL_PASS:                             gmail_password
  GMAIL_USER:                             gmail_username
  GOOGLE_ANALYTICS_CODE:                  analytics_code
  GOOGLE_VERIFICATION_CODE:               verification_code
  UNICORN_BACKLOG:                        16
  scope:                                  google_api_stuff
  issuer:                                 more_google_api_stuff
  DEVISE_SECRET_KEY:                      super_secret_key
  GLOBAL_ALERT:                           "Global Alert Goes Here. Very important information!"
  ALERT_LEVEL:                            "success"

test:
  DEVISE_SECRET_KEY:                      blah blah
  API_CONSUMER:                           localhost
  API_SECRET:                             heorot-vermonty

EOF
}

check
bundle
install_data_store
bootstrap_main_application
# bundle exec rake db:reset
rake db:reset
# This must be run as a separate rake task because "db:reset" changes
# the context of the database environment in a way that makes "db:test:prepare"
# load the schema into the wrong database and/or schema.
# bundle exec rake db:test:prepare
rake db:test:prepare
